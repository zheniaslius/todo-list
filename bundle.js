!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e,n){var o=n(1);"string"==typeof o&&(o=[[t.i,o,""]]);var r={insert:"head",singleton:!1};n(3)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){(t.exports=n(2)(!1)).push([t.i,"button,.todo__priority,.todo__action{padding:5px 20px;border-radius:6px}*{box-sizing:border-box}body{height:100vh;margin:0;background-color:#f3f5f8;font-family:'Montserrat', sans-serif}header,footer{display:flex;justify-content:flex-start;align-items:center;padding:0 30px;height:10%;color:#bac3d0;font-weight:bold;background-color:#fff}main{height:80%;position:relative}button{cursor:pointer;color:#fff;background:#223ca9;border:none}input,select,textarea{border-radius:7px;padding:5px 10px;border:1px solid #bac3d0}select{width:100px}.container{max-width:1170px;margin:auto}.top{display:flex;justify-content:space-between;background:#fff;padding:20px 30px;margin-bottom:30px;border-radius:0 0 12px 12px;box-shadow:0 0 30px 0 #e4e7eb}.filter-options>*{margin-right:20px}.todos-container{display:flex;flex-wrap:wrap}.todos-container__todo{position:relative;margin:0 20px 20px 0;display:flex;flex-direction:column;justify-content:space-between;min-height:190px;width:190px;padding:30px 20px;background:#fff;box-shadow:0 0 60px 0 #e4e7eb;border-radius:12px}.todos-container__todo.done{background-color:#e3e8fb}.todo__tick{position:absolute;padding:5px;color:#223ca9;top:0;right:0;width:23px;height:20px;transform:translateY(-50%);display:none;justify-content:center;align-items:center;background:#fff;border:1px solid #e6e6e6}.todo__tick.visible{display:flex}.todo__title{font-weight:bold}.todo__priority{width:fit-content;background:#f2f4fb;color:#223ca9}.todo__footer{display:flex;justify-content:space-between}.todo__action{padding:5px 10px;position:relative;box-shadow:0 8px 26px 0 rgba(34,60,169,0.31);cursor:pointer;background:#223ca9;color:#fff}.todo__action:hover{background:#2644c5}.actions-container{z-index:10;display:none;position:absolute;left:0;padding:0;background:#223ca9;list-style:none}.actions-container:before{z-index:-1;content:'';display:block;position:absolute;background-color:#223ca9;height:20px;width:20px;transform:rotate(45deg);top:-3px;left:10px}.actions-container>li{padding:7px 14px;border-bottom:1px solid rgba(255,255,255,0.2)}.actions-container>li:hover{background:#2644c5}.actions-container>li:last-of-type{border:none}.actions-container.active{display:block}.todo-form{z-index:10;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);padding:30px 20px;background-color:#fff;border-radius:12px;width:250px;justify-content:space-between;flex-direction:column;display:none}.todo-form>*{margin-bottom:30px}.todo-form>div:last-child{margin:0}.todo-form.visible{display:flex}.todo-form input,.todo-form textarea,.todo-form select{width:100%;margin-top:5px}.form-priority{display:flex;flex-direction:column}.todo-form__actions{display:flex;justify-content:space-between}.background{z-index:1;display:none;position:absolute;left:0;top:0;height:100%;width:100%;background-color:rgba(0,0,0,0.7)}.background.active{display:block}\n",""])},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",o=t[3];if(!o)return n;if(e&&"function"==typeof btoa){var r=(a=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(s," */")),i=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot).concat(t," */")}));return[n].concat(i).concat([r]).join("\n")}var a,c,s;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2],"{").concat(n,"}"):n})).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];null!=i&&(o[i]=!0)}for(var a=0;a<t.length;a++){var c=t[a];null!=c[0]&&o[c[0]]||(n&&!c[2]?c[2]=n:n&&(c[2]="(".concat(c[2],") and (").concat(n,")")),e.push(c))}},e}},function(t,e,n){"use strict";var o,r={},i=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},a=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}();function c(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],c={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(c):n.push(o[a]={id:a,parts:[c]})}return n}function s(t,e){for(var n=0;n<t.length;n++){var o=t[n],i=r[o.id],a=0;if(i){for(i.refs++;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],e))}else{for(var c=[];a<o.parts.length;a++)c.push(y(o.parts[a],e));r[o.id]={id:o.id,refs:1,parts:c}}}}function d(t){var e=document.createElement("style");if(void 0===t.attributes.nonce){var o=n.nc;o&&(t.attributes.nonce=o)}if(Object.keys(t.attributes).forEach((function(n){e.setAttribute(n,t.attributes[n])})),"function"==typeof t.insert)t.insert(e);else{var r=a(t.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}return e}var l,u=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function f(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=u(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function p(t,e,n){var o=n.css,r=n.media,i=n.sourceMap;if(r&&t.setAttribute("media",r),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var b=null,v=0;function y(t,e){var n,o,r;if(e.singleton){var i=v++;n=b||(b=d(e)),o=f.bind(null,n,i,!1),r=f.bind(null,n,i,!0)}else n=d(e),o=p.bind(null,n,e),r=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}t.exports=function(t,e){(e=e||{}).attributes="object"==typeof e.attributes?e.attributes:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=i());var n=c(t,e);return s(n,e),function(t){for(var o=[],i=0;i<n.length;i++){var a=n[i],d=r[a.id];d&&(d.refs--,o.push(d))}t&&s(c(t,e),e);for(var l=0;l<o.length;l++){var u=o[l];if(0===u.refs){for(var f=0;f<u.parts.length;f++)u.parts[f]();delete r[u.id]}}}}},function(t,e,n){"use strict";n.r(e);n(0);var o=document.querySelector(".js-form"),r=o.querySelector("#title"),i=o.querySelector("#description"),a=o.querySelector("#priority"),c=document.querySelector(".background"),s=function(){[r,i,a].forEach((function(t){t.value=""}))},d=function(){o.classList.add("visible"),c.classList.add("active"),s()},l=function(t){t.preventDefault(),o.classList.remove("visible"),c.classList.remove("active"),s()};document.querySelector(".js-create").addEventListener("click",d),document.querySelector(".js-cancel").addEventListener("click",l);var u,f,p,b,v,y,g,h,m,x,_,j,w;function S(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function k(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}u=[],f=function(t){var e=t.sort((function(t,e){return t.done===e.done?0:t.done?1:-1})),n="";e.forEach((function(t){var e=t.id,o=t.title,r=t.description,i=t.priority,a=t.done;n+=function(t){var e=t.id,n=t.title,o=t.description,r=t.priority,i=t.done;return'\n  <div class="todos-container__todo js-todo '.concat(i?"done":"",'" id=').concat(e,'>\n    <span class="todo__tick ').concat(i?"visible":"",'">&#10004;</span>\n    <span class="todo__title">').concat(n,'</span>\n    <span class="todo__description">').concat(o,'</span>\n    <div class="todo__footer">\n        <span class="todo__priority">').concat(r,'</span>\n        <div class="todo__action js-action">...\n          <ul class="actions-container">\n            <li class="action" action="done">done</li>\n            <li class="action" action="edit">edit</li>\n            <li class="action" action="delete">delete</li>\n          </ul>\n        </div>\n      </div>\n  </div>\n')}({id:e,title:o,description:r,priority:i,done:a})})),document.querySelector(".todos-container").innerHTML=n},p=function(t){var e=t.getAttribute("id");u=u.map((function(t){return t.id===+e?function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?S(n,!0).forEach((function(e){k(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):S(n).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t,{title:r.value,description:i.value,priority:a.value}):t})),f(u)},b=function(t){u=u.filter((function(e){return e.id!==t})),document.querySelector('.js-todo[id="'.concat(t,'"]')).remove()},v=function(t){d(),document.querySelector('.js-todo[id="'.concat(t,'"]')).classList.add("selected");var e=u.find((function(e){return e.id===t}));r.value=e.title,i.value=e.description,a.value=e.priority},y=function(t){var e=u.findIndex((function(e){return e.id===t}));u[e].done=!u[e].done,f(u)},g=document.querySelector("#filter-by-title"),h=document.querySelector("#filter-by-type"),m=document.querySelector("#filter-by-priority"),x=function(t){return t.title.includes(g.value.toLowerCase())},_=function(t){return"all"===h.value||t.done===("done"===h.value)},j=function(t){return"all"===m.value||t.priority===m.value},w=function(){var t=u.filter(x).filter(_).filter(j);f(t)},g.addEventListener("input",w),h.addEventListener("change",w),m.addEventListener("change",w),document.querySelector(".todos-container").addEventListener("click",(function(t){var e=t.target;if(e.classList.contains("actions-container")||e.parentElement.classList.contains("actions-container")){e.closest(".actions-container").classList.remove("active");var n=e.getAttribute("action"),o=e.closest(".js-todo").id;({done:y,edit:v,delete:b})[n](+o)}e.classList.contains("js-action")&&e.querySelector(".actions-container").classList.toggle("active")})),o.addEventListener("submit",(function(t){var e=document.querySelector(".js-todo.selected");if(e)return p(e),e.classList.remove("selected"),void l(t);if(""===r.value||""===a.value)return alert("Title and priority are required"),void t.preventDefault();var n={id:Date.now(),title:r.value,description:i.value,priority:a.value,done:!1};u.push(n),f(u),l(t)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,